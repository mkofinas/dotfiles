################################################################################
#                              Tmux Configuration                              #
################################################################################

# Move Status Bar on Top
set-option -g status-position top

# set-window-option -g xterm-keys on

# Set Zsh as default shell
set -g default-shell /bin/zsh

set -sg escape-time 10
set-option -g history-limit 100000

# Use True Color
set -g default-terminal screen-256color
set-option -ga terminal-overrides ",*256col*:Tc"
set-option -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

run-shell "powerline-daemon -q"
source "$HOME/.local/pyenv/versions/3.8.9/envs/powerline-status/lib/python3.8/site-packages/powerline/bindings/tmux/powerline.conf"
# source "$HOME/.local/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf"
source "$HOME/.local/pyenv/versions/3.8.9/envs/powerline-status/lib/python3.8/site-packages/powerline/bindings/tmux/powerline_tmux_2.1_plus.conf"
# source "$HOME/.local/lib/python3.6/site-packages/powerline/bindings/tmux/powerline_tmux_2.1_plus.conf"
WEATHER='#(curl -s wttr.in/Amsterdam\?format\="%%l:+%%c%%20%%t")'
set -ga status-right "$WEATHER"

################################################################################
#                                 Key Bindings                                 #
################################################################################

# Change prefix
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Change Windows
bind -n C-S-Right next-window
bind -n C-S-Left previous-window

# Unbind Alt+Arrow Keys
unbind -n M-Left
unbind -n M-Right
unbind -n M-Up
unbind -n M-Down

# Swap Windows
bind-key < swap-window -t -1
bind-key > swap-window -t +1

## use vi-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# Shortcut to reload configuration file
bind-key R run-shell 'tmux source-file "${XDG_CONFIG_HOME:-${HOME}/.config}/tmux/tmux.conf"' \; display-message "tmux.conf reloaded."

# CMUS
bind-key -n F1 run-shell 'cmus-remote --volume -100%'
bind-key -n F2 run-shell 'cmus-remote --volume -10%'
bind-key -n F3 run-shell 'cmus-remote --volume +10%'

bind-key -n F10 run-shell 'cmus-remote --prev >/dev/null 2>&1'
bind-key -n F11 run-shell 'cmus-remote -u  >/dev/null 2>&1'
bind-key -n F12 run-shell 'cmus-remote --next >/dev/null 2>&1'

################################################################################
#                                 Set Options                                  #
################################################################################

setw -g monitor-activity on
set -g visual-activity off
set -g mouse on

# Use 1-based indexing for windows and panes
set-option -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

set -g status-left-length "150"
set -g status-right-length "200"

################################################################################
#                              Vim-Tmux Navigator                              #
################################################################################

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-Left if-shell "$is_vim" "send-keys C-Left" "select-pane -L"
bind -n C-Down if-shell "$is_vim" "send-keys C-Down" "select-pane -D"
bind -n C-Up if-shell "$is_vim" "send-keys C-Up" "select-pane -U"
bind -n C-Right if-shell "$is_vim" "send-keys C-Right" "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

################################################################################
#                             Tmux Plugin Manager                              #
################################################################################

# set-environment -g TMUX_PLUGIN_MANAGER_PATH '/home/miltos/.config/tmux/plugins'
set-environment -g TMUX_PLUGIN_MANAGER_PATH "${HOME}/.config/tmux/plugins"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

# In order to use XDG Specification, the following plugin definition is
# necessary (https://github.com/tmux-plugins/tpm/issues/57):
# set -g @tpm_plugins '          \
  # tmux-plugins/tpm             \
  # tmux-plugins/tmux-sensible   \
  # tmux-plugins/tmux-resurrect  \
  # tmux-plugins/tmux-copycat    \
  # tmux-plugins/tmux-yank       \
  # tmux-plugins/tmux-open       \
# '
set -g @resurrect-processes 'ssh'

if "test ! -d $TMUX_PLUGIN_MANAGER_PATH/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm $TMUX_PLUGIN_MANAGER_PATH/tpm && $TMUX_PLUGIN_MANAGER_PATH/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run-shell "${TMUX_PLUGIN_MANAGER_PATH}/tpm/tpm"

set-window-option -g aggressive-resize on
